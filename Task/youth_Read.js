/*
更新时间: 2020-09-26 8:46
Github Actions使用方法见[@lxk0301](https://raw.githubusercontent.com/lxk0301/scripts/master/githubAction.md) 使用方法大同小异

请自行抓包，阅读文章和看视频，倒计时转一圈显示青豆到账即可，多看几篇文章和视频，获得更多包数据，抓包地址为"https://ios.baertt.com/v5/article/complete.json"，在Github Actions中的Secrets新建name为'YOUTH_READ'的一个值，拷贝抓包的请求体到下面Value的文本框中，添加的请求体越多，获得青豆次数越多，本脚本不包含任何推送通知

多个请求体时用'&'号或者换行隔开" ‼️

*/

//let s = 30000 //等待延迟30s
const $ = new Env("中青看点")
const notify = $.isNode() ? require('./sendNotify') : '';
// 自用body
let remoteBody = "p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFKku2cATaf916iHSRLn4yrwK7Z2zzl5vn8IiRkasrO9vybBrjGiwTqLB5cOcbb7Ury6KV80FhcFB5KcYoceDW9RobXZN8E3CxCy_colHqqJ9nEpF3FoEvRVgytqTiivSEQU2MQaZxumjHzKhA_eeaiKw1jErZVH2K8TC9UFwxHOaXlfo4GpoijFXwaRer4vhJGCadiIBYHzMkDriRxaEKzkYJ8CByIvraJdw7nS-gJ7C6oBgbEmtIRTx6BZeVg7-NfilnV32DKJKjSx_zTpPHWi97uls7CVg7ePKGRWCkrVQfCMyRwgHXZm6Pq2TA4Fx2wz_j0fgmDHa0nPq7kk_dNtLNWfenOu_EMCt9mSJzh6MxFmZRya3rdvXyv2PgrAQWKz7Ug8pEoTjFlK4WV2_JuRtZQ5oX2jwMLbZATMRbYNQaOJoBg5P-UnUuyjKYHx7Cid6C2dEYHXQ32CUX6_HOxxIwo9jOVEf9UGjbrnxmCaUq0_r57mcA2Fa7LsDWVCph5VpqV4QMJTQXtU60X7aLOl6QRHrXJno-ojnEg6zCoprWAvaNR04WVeUUJiCU7Yy9g%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFBamibUnlipM7XPZlWWbZWgi1aI1Q8-wwc9ucwuEoE5uwhGVvSoqS6Pk4Fd1e_nwHVzjr3t2INC2AoHKzPGbv0oiV_xhy0AkHTKdaqLcpJlc35fPDjcIPyhIa_bRhNvARQbmr4MnI_g61_k-zsxgLds_zVL5i33tuUj4srDqxqBWRSQQpYRYEbemsIleQHjSfhjJyan56RMha1AxmMETxZbROfUvl5J9PweekBmmbd8qqhWFheYb5NtTmtm3DeiEPdbQp8nSlS3VJIb6XD3Mmf9QobPrNbkii_tgGJLnmeGY99TCVuUvREzDfq4VSBqpSL9xm8QcirRD3sh883c6ETDKJPYsrcIMsbdF4X-H34fgaCc8d-YgCx-PxUqQX-dywR9T3YIiSgc7r56yW7cB22IAGEiBgu7dFml6UtDQ7gEhJxRYQSdwziaMSQQRX55WTo0D8yAGmsrqyXL1ZE0troELHXHOGs-Cgw6DL_SVqwHH86Gxw7B3zfGf8Ev7HB7fpPLwMMUUiv4yDmoeJ72GO34Dioaz10J0Jkvl2Bv4ZLVnychq0XhOYzn2UQPrYb0jEA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFO7R1MCDr8sL4pN8a42esIvPS8Ff06bjYfQhgVZBhd6pZxS-4e4_ijFV6zN-hGEPl19y55JWz2OkWogNqDO2Jsym1St9kH7Qia071yNW4-wzDnu2nDV38hvo5uei53tqzZbGx-PaLmxxeZl7Jgth_7h6J6y1-6jp9CCgbT1OrrL2Mt17fOeW1Tey3Cli6QLWNZvO_-uiZAICeEGmB5X2Hk4qSXe4Hxb2PNTBNcHR8njYgPWKTdB5wO5w38VLA0qcjUJNbDtP9P9fLaLiewI4bc2DkzaRPeeA5FEX7vyd3kBd92IfnF0SQAoExumFleuWJLiL52EuWWwXESjlMuhKpThQ4k3ZoIJdpuXAbhLguNrHGg9OmtkCYfQ_1qrkJRY8Hszyg8uruymzvaCugMe8NekJjdLnbodwhR2kx91Z5ttceRg0e-UgzqgMbcq-b_7Qq-08tCN_eXBZ3reQ3EWyNmAc_LdhzeHYL9cG6G7c8ZLRXgcPpmeCM0VBd60BP_nTfbN8Ivq9gJ5OrY6-8E3BvCqY5mxc4t3hM8dWfNtbK0oDNf09FjR7UUGkHm3kdX4RIw%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFBpNk0bCuVJlZn9Wu9edxnrOyvuNp9ZtgzX6iXl5cfVodCbXTljq_VrRKuOfeb20aeFWnkWvz73JEmYDK_2xryid1YmlED9noASCWvkQEUQIqsGn4xS1ZWNCldPOUVEViJ5tZ_hl__p9IQ4c2Ajl8-LiVKxL8jhcRAEmcGQ2ybWcoMuuthaEDGV1_mCqz0jycmGwHCJEAxY14YYytGWzk8H4rWiHXEquxNrrQ3qFkQwTA8V4kTUP5HqyGdQW7XWvbDq6YhC8E1i5aXfiteqNTalrC1OXkSXqKdg3ujEq2e7EHQZLUA3TN8xQ_ypBSxR9JkIKOUX2UIcAyqmx03po3LEwCzC_jkAs5DiDkPnW8Wi6AMU-rcJLMXOniluGsULeBPihSlXH24_C9LowIgBnG1OLNLpIkq0kEL9euGPF01C_lvN_tY4LtDw5jp2Ppd6sqkYkEHkIpOT37KhnObGXlgz6evnR-gLtMvWNWcYq3VL6u9vYV3yW_mOytYxUJAXURb4kr-Fwkx2zruIx9oOYYgmdPBtlbk4hmpVNFGVwH519BfGmBqYn2GVJfU-Fdt7yZg%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFIoZG8iXvj-QZE-e67g0t9Tp62uVGMp915vydOOOA2V-g2mbgihG8uE2vdbla46F7jMZ08-Yulh2juemjVbnGPTn0-7E_fF-0XhbVdat39QyqkVuo6hbkNBhHFvZKq-1TgaAVptwvGI93TpVFGsjxu_8IDIajW-Xr5E5yvnyLJbyg4tAbiZGq-WXf7CUyCfALfIJC_7yAaWlPFo7iw__s26UFDiQ3ja9tyRdhlNB0xb21sfq19FENd0LyYe7lEhNgQGFyY4Y4caJT50YmdvQZUp-o7snVcYA6shB1x-KkdPUD3YC8doksOrTenQn3bpq7Af4nFpPe-pQZkIOTxXWk6MG4XfBnpUUf0sGNK0q981cG-RfYSySsOhx7caWO3ii3nHLI2g4DQSZg0Sej6Svm8S9ZMtyWz2qFlandkisTQEJA92o3uE5JWsa6N3wbxot9NC-bDp88oZc-DLdHV6MgSVJ1oYTRXg6oaLtwBV2pQdfBKk7QX6f8otLY8UjubW3Jx10meVSxSQFbgK2KeK64_ORCHTPHzlIGpkpfSTVOuPPDhH1yErHgfXEutTUci80Fw%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFCbDbVjhfRPnRHdDEdmVdwU-9pSnx68VWpHvxofxqfk1vgLoMbiBZ4RbwLWP_-hja44iV-NdgdQB4inM-USWgG40_qtqiv7gjq31KNKmv1goOOHkFuKeKSI_hbhZD8y1EeK-Pwbh-8A5Jszi_0JI5JXitEKJ6PDVlfC4zOxEmDomrDOKf5K-KBkoLkjYTFj534toahw7Xai6jbMcITguB2R60diJ4LSA_M27JhrnAb44vLZpX6WtJQBC5AqFhZWCtsjN_o90nNrmuK7O8BvbJFOEXEy1k5luZXsrxic5K1Az4K12kMs4Rh59fNapbBdE9qOdrZZys-PEtRJRTrMg9oGKrO-QpOMNsB_DbKfdMaBd8kfej8dHC9AFft30hjitM-qu86kaBFhZGsz2dwTZl3-bFmWp1Lec0e87VOF3QmoWkAkG5xFjYxastPx0hc-UX07aMMHrjifAJpY5qMVkdpezT7zTN3f48m6naKLiWHye4YQt2Z4FNGHzW_TCRHB9rNEuJmwUosYLqRk6ndvQnG43J7-yiTgVkvWTW_f5ORA5eDGijwaqBl11k-LYOqJ3qg%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFFXoblns1sQD-Fqx1S5-HVd8eGBhPvHk1ZiDeIYz2_Ski_IcVeGIhWZ_2fYM9MgumM9O7dfjcfMxhpyC30CuFiOJYovylyXFIWrpXRXcpc9NQBggA096Tf_WfwsrZYkf92BInN8l91-1E7SouxKbF0tpFj0jAZWoie051oypLWiQpCeSLl6UR47r8X_DayCdzcsws8WqMoPMgdPWKC9YV2-zYG6iJ3AHpWlJV3Gqjqj5MHXAXYbV76pwRWJ_s07U14yTF04vteBCg1uKbTSIO1hOwq8FQtR3HJ6PVcAxYnkneJVPo9lHEzcBNb9YyVOD-vIO3ysyyihaiLD8swB8sD_qocK0R0C2ls2ipj7a57bAUVpkDLFxZOAmNz358fq9JRuFWfFHvXmi2aWJtMoWGQnz-gH490V7gugFRM82kqpkyJB6RVb2zyURVrZ85WYEmsM49kfu4AgrcmDAkO-qOGKTd383pC3ECMTIQP4j5hvXgRYiAA5S1CloyZguS08cGJiFXZXNYJX1elgUoTnFmH8H5pVu4G1irYNZ4EE1p3Qh7PgR6Oqyt4zHzgkkpsgbzA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFEBiCUxk_bz_Wmrua1dg8Ae9zYjKD1pKaIrH_8w88ckdPwkt6OOaY8JE9iY6noXxZOaR00LRI2iYgKlvstYI0nGrVJ5XHl3merFOq60uIADwAAsoLPRJz7xUueyYHKViIfSacMqvFZDv_Y779PuWdcei8I2Vpdu5VCAZcOAR1waDc0HyeXorF9A0CfhY1Lm0LKg7EDPshvTYG4mWeG56T2CewUwkA4nMJdkppeaEoDBKVeybdZAVdv_1cYUQl9vWcBj7bpnKAYUiw_yyoHgL1gS0XXsTiHeyLtFOiBCG3SV2nOlobbInPdACMP8tNvzRl4Yh4dWgv5YnTqq07VrkQpFw2nKAqr5SzF9Kjx3JiRYP5eSejMtrczO5JlWzs2V8gsuq8zaESkNSgfbLX-x0AV_67PSsgLZR6hhX8rcdg7a8z0GMvFk3CLxKIPZsmB4yUgMNfiOEZdewNtsqR6XvNhWm40lQ6J7MMZ2I3sfc5nzSk7X8kU14m3ZV8kvbnQwEw0SbDxRrUstPkx4ln5DvnkwEqc2Q1srXX-NNaGGKzrCbG02caFvA8nPEYF0m9KiXhA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFB8MqibXt28ZYzmpxfYNCVY-UZ5BiReJrE1n50jLWJwqWAeO1nsz2bqU8G6gQ42O5YtYhsIjtLPfD03DmSA8wZE9NhvdpjYPJr-MHD43w9K2Z8jyIFUb2b4W-sjFsjiUmrAcXcXvvEYsIj2it-HzxnVb03JCqh1PQqFocYJooOSKobG7KcP2pVyCm7uig-MnWg48cZ-DSPUjAndj8CKl3pGdltLLKbqd14VH8PKGdLiD8rKtTO3uUx3Y-VWMSfOalJwJ-tgvBh6ASXThzej2tapAzOwbWFP4JY0BSzx58mVPVouMa1YT1X1fgmjYHPjWHYJoEdiaX7ThY33ue1nPJng4MfbXUOXAowbofsVvJUzVMewIVOtaT2R_sq8oY2JFn1EWjOeRGQBtszubJ_vhHippPEECPadzHJTP_npqZ_FaoElTC5_-5NukzIdu1IB-7bldlm0H59finf3YFU7ZFrbh6lqIfy8OxhFnzZ1HxL_9r0BmizqHfhkW7_fzHb6rgjFKVgnh3n4GKnCjo8UppLGGONnqaE6rJl7EqNAV9JbnSD1loAcJccR_P9biuCITEA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qR2UOnMkNnW5OM16_tkUZQflNSkYJrv5T1UHkHa0M_z83c4rt8Px13WUvvpICBJ5ngnC5CgZ2MUCrIyr9ggOUZAiVxLgqbbW7SrbMdb0ibUnxnNErgyo3b1xA2NRdLPJfXviiWXiL6kVQXMTOrRdh2-HhMBuqVcfrN4cA1opQtflAUyt_ZZ4ya4iXTomRp87Wc6s9MldDvvh2jvfbCk12w_Pwh8sAor9JIcAyJ6-dSKc7_0U6NQc7H4FtzsqcepneOJ5lVukpcU4cnpDaXCn5togYvyl1bEwBAOQ15j9gfq5xRdvb0iBxOvaDjFkXA9tN7hrIFTujVEGuZvmFXM7I_AIqRL8DR7nnbDqHZaUsk5Cprk3cAo9x95Z8sP4W_Hxb41wSSeHWxn_sz-ahHWAfUnRv2W5GJvcIoI010Xbw04WMhUbAUxy1RqfWg4uBD4IPyFILNtREOIBrHrS5UuXVYhahY6BJTQq_FdBjhXrPnm2IM4GDetJRKp_xZqko5CQH5gTtI68mPl9fe94wMZTD6IPHClFmm6-uQ9n4MxAeComXXzjm7R7Jx1Pmee5LOXRze9SsAYkit-0Q%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFNUjf9Xk8zIP_mQuEqzVw1qj0o4WitwtO7aE-JAoSnxvLsuH2RaGKYwlJSvMLZd2RzOZWh7ohu6akel5UyzMcYyrBAJmrcpvEkLKMJ-B1hPQDofrauaURnNLOC3udMz0vYpuI3E81v8_p-pA8GLgzpQoALuDXBSy4lyuCjM6QIEb8QBinSkDooDJZ-CYtF8SUTKSQJ2RyvDjzyTiJ4kMpoEAuBi-XS7Gwp8lQSLk1HpMS5IGBQA5E3k52L9Ty3il4ooHJFJ2WSZAGbWjJTpLMt6WZwrQBrIiubKGeyx-IwQz7Ia3Rh5ekU0zw6VbczHvxo6TTreH3_EWNY_PI5Na_M1Y5iJUknu8BBQy9tJVPbXi44LMXII76SkU3eBtrZolJZ7KOHnhCu58ZLA0vhEnH6wdb9a8tBxO7-3uz6iHC1GnWL5QUfgfhDejMxbXBIMwLAAqkHDXL2KdSC8eEu-w4NnUmHqRmZf9NlJOomHNHNo064xv75_n_4xB5TaEYarbNb9go0iwMvYTSQSozha1fcJLtvNcyoHoos3w8Qx0NVQ2QX8yCLuFeRsh2t1KZs6CRQ%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFAQTfLDX4h1J6r-URm5aPX8RPfHQKJqKPXxfVrcipqXoGG1zT5CchTt7m-cffuwIpHmXVpiz8ZvjTh2g9Q2Jhl6mzgW7Lxn1pHPYbQiIr5DclATjLX_fFEcsceM7pK6whvyxCGXx9iSIs7Bv8mXtejyRgArbi_J5Jman0YFLID2zdhIBOWqyI5BXhR6NMHQTqYlBG_bvIExElUXB9pu9jFJQ2pQ9_Jx5kJ4Pm2c1VBeQRynNRj228_NPl4AP2DqJ2gb10Yc0xZbc7cHniP0IC6qlMXuonaJTcBeQBvvSBe_uJiveBK1xVedfLrGHcsvBIdWhu8WjXB3u6zgj64asx8M4P8Awtft788nrE9tChzGB9CCJfyCea_u8DCuE2CFosNPcCX7P9v9H2QBzQuVvIa3ywqMMnuJ4IoCPbx3LzHF0PJ17HSojvS8OQIC5SSZ1A-tXxmL_P9YRkWJdFrT-EJPE9HHuI7BrWiyJSftpFrsgc2o8Fj-pF5FgAlTu60Lo8xEoiRbFRkNhqVKDVFKktWOrYY41MlyTLDyOiuwLKzoYqwiHirSBqTnXFzuwGh-Ndg%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFGwllDusINXfv7z5mUvntblpyCU58zuLcTbQBNk-BOPdFA16TGlDOodaDexN-oBoq2gxLcBwUTQulRyv9fEXs4hRb_sVTVado1tB-YOC1T_J0PPJwZNjrsN_4b-xd16OpIs-XeC1K8oxWSvH-7VuXeJ-ZxbtoSO9evZNP47VJY-_7fgTK8-R9j0S899uHEsA2EGv3gZJZesfR7LwPW3E5AB5g2P8ip-9LlBA9d2aNMLP5bsN6O6jtrxRQ758Mxt4TrBfi4SmfdpB_J14m99kJk8F1PGOI0MJZMH5BvWrY6WfkmKN1HlxqDDdSJJioEyQeBZ9eCVAYs3o4fK80rP2kxqEbUz2r17XV5d32UDKxTx_pjRxd_amNB-UwVJ3YkbMnIQCx5b-vz9fICLKsL3S4ycNdG34SCQFEhhj-fW-ZxLZNLiOukfVWBSmQVwHAWC9EnxdLVfunJCJ-WIzOsjIqi4kKb__yO_pHwDBMQSczxHKE3i-0CCn3mseDvzWbjgzELjcqPacg-XrSIudok2UD8mBnR6cmg3ZHfN0pIzEaAGKYTsnf15ioHSSlD9SA7DJyQ%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFPdrliZz1z4d3-vxNGKw-PHPInTbelaNJI7wIT-8kzaXRrw9_lWh3g-toz7pEOA7yhn0vSwCjL8xW1nK8ielncMXfbz28dkX4Ydbb8tBagZavOYZwbyXLLgEJRse17n-b-ehwMckudZcFq84l9IM1_xhPK192V1t7G8w6_e5SEY2MTnawv8DZ9_rykPu5EDtJJyL1N3JtbPvUFxiG5EXezc-i0TrTwO5mD3rpg9AK9-WHLZtDHLt1jZch4HqOX7gUM9_T02q8ge5Fc8ofFUQ8yWPIQLYkSFq90woAq09rGJoENwhwGex82s3ydVAeSeOk7I_bHDYHnkMfotpFlX6taSv2aatSx_u-EHMnc61lzpu6FxqrodDyJRVlbNljOWHH81zala8JNfH6dzJuP4g6zcMNfjm5H5xwn8ylwhhSz6p1nfjeqGPNl9rDLwukz_pk03VbnaLvKc7hGU8bzK9rBG1x5QSBU_RAU4CBuIBTxTRbxrhrKE6UEaHQ9iXCWXj0pAU7ICzgrQLEGx_NjRiDwKfopkwiHu-c-s_kcflLa3r4XPxaPp7hNAnBFgQLFnexg%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFNcJ1C9LLFj3EtX8ZYgXix6IOjOKOaW508sJU1DkEM-TkQsug3S6Hr5E7VYhtncAS3GtWXjZvghaFTWfQugNxL0HtTGF3_8DcrsqBW2TdiMWSWDn-vNwvlZkHCzKU0chCMbsmut-bA6cn83cfAfHTeiPPNgbyGqv1XZoYBHGFTyxqzPrMBfE3HbNz3BlmxvZV-TGvWBhOomZApIM8aiaxlOMNjGET2w8B8rW1ZbXjACLw_cHxyoENUVtFQ3hp7L1wp9z3Wt09VRewOO3GJYl1LAwnVOFlFBtqyIC-RIio97bW-MGflftfdGNC1W5OviqIzwszpwp9C5IOveJIlYy843sdH1vRWjvOEWq84MzWi6OMany_7Rfcl5Due-o69utrgKHW11m9_kS9rZfjR18NyfeLRDOa0d_QQespJ5mbhrWTZbUFPhsv8DcF5-OGZmv6ve1vzeiML3NgKFupxM6tUBqeXEKKFccPXUgLeVVyzqENcU1QogS_WfjSHMngTjp-QvCn6gJFpXknSdoazpI76Jq-yNrPNJF4_fOueEQl_i-XvtwmFjgBqRLeHzNlDKnNA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFHWCBGfuDQKRkCfvyxFPYwy6q5LukwwUUtJInMyqKehCmHYZwmiObwvP9V5UGbTmbmgdVq4kw_DxFarM-aRF-AvYLdM1yfYYcwgHVM6UM2TWrYQ2ChlCA3hZ-VR2qXseMfS5YPjIcsE2MCvv9d8OqqlYzTZAxJGGkTT3n_5CnP6qsnU7DNrjBhyUVkuWXDx_vwDVAurPZ4ehB4_hmGKtnz6x_5KRKTkw3qAvCQzHleQruc7niro7JRp7uh3q-PGilYJG8gmYoczOfdNCfvMjAhn7-i077Zx7Oo7DgnVlA1420lSTesJP1NPF7G60-6lSH85A1-N50TaQmoNZBV3x2_7xnkxt9DE99Uc-1cgWiupU6wBuvGyM2EdiW6vkzK4c6Ds7caSrOAYbHroJgN8vLphpnAeYvtSkwNQpv7WV5W53DYrKxQyrX_1Cebkzbk0w0riSgaH0rPJmTFYHrsAlBG4DCFKSOHNqKdVpMyXMB-N1F8hNUckxtCqsXkDiodElUE_31LF5YFK7ntOBhTcyxrUwcnxERHBJ80qoNIsfRZu_0qqqXNiUi2aCEGn3xv3O8w%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFDLAxKf1PIjCke3wUHFYiWTv3EqE2fuIPN-1cYeVR-78-U9K5va5SqAuocrF0UyyT1RcfLC3LHt4w1IQmfEVXoMuGwyHDhhvwiPuhiZszz696u8tGGcjn_rdWJJlP5zFvWbcDEBJl4X7KaNBPoLtMCGQ5aTpGBS6F5teV-dbAdoTuVCcHgIv5_RnXGg0q9SaUh_Qkx1vpTpwD9Bk_Ssk-V1WqN4TJel9sXeE11lDjlGQvjoDjp7wOUngORGKpR2u3BfAmgPIeJQn_5Ra0h2WP1xlkeLg5S4g4HHv6Y7WkdHL13I32C7mHt2ufXBfpf1iO-GxbeB4VtISdy4VHCTp3SHaF4ixjFv6HLaI7_ds_OCGOlB31salbJaD6lPfQqsC9NIXwys6LPfetZQJmpgyZ-x7MSya_z-A15ULt8IpVdIVNlWqGUiwZ205cL3FTmO9HneTPhU4FLMKTrcO6qHOsFH0mGIY5bMo2ThNWDRyId_y1Vgkg3F0NtIFQ3oAZXMQc_fX5mYqhhg5s8kiJHJBDz-yLItYUEoDIUDry5rHtYDoFG0NGqvOzOfxRxhZFvN3sQ%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFKMuAxiCHA-kCga2Filj4mhK7764tSsknYu14KJ0QuUAGPcG-Zs9uomql7XNyO78ZCksI7_TxrHoxmvxDyT_h3EvUtvzuDfUW-CcXehMp41GmLA7oM5Bmdo9e9un8FqF3CStX__Y37e29iCseCVN2Xy3A5rQ6ECY6Y6i0nidw3_65qjgtE0Oy0RbxtX-k8RVkHvg6D2QCBEIuNlHroW6I1P7wMsmmOJXBG0iKRPMzOTcarLEDHwtaJkwesi6mgFbJqzQG0MTbSGZcQAI0h4jhVKG0ZcMpto8VeGSsFEiwsXq08dre_k76g2Zt213QHLvCNCSXpDfHlpYnrINe2wqqtsqaaBMEJSVsz0EWV_PSMiSP8MYR5Oncu7kXFKItU1nFGwT0y4zJ6HOeKxjxKZC5TOju-3WKEsNQqJLDxzewf0o26QAIxp8IdOiXTXPexQBiEZl6MkMqFcNehQsJn7RbhaIf0pfIt3FxMz1tHNhXKYXQa_RNnEyF1APSXmT6piIkjWtp1Xyz4epH2kHBsU46KBAQp44ZA0yZJaeizKe2P20kGgM85A_WMfjP8UCpo9AjA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFKMuAxiCHA-kCga2Filj4mhK7764tSsknYu14KJ0QuUAGPcG-Zs9uomql7XNyO78ZCksI7_TxrHoxmvxDyT_h3EvUtvzuDfUW-CcXehMp41GmLA7oM5Bmdo9e9un8FqF3CStX__Y37e29iCseCVN2Xy3A5rQ6ECY6Y6i0nidw3_65qjgtE0Oy0RbxtX-k8RVkHvg6D2QCBEIuNlHroW6I1P7wMsmmOJXBG0iKRPMzOTcarLEDHwtaJkwesi6mgFbJqzQG0MTbSGZyrH3TvDfjeig8fiwGiT_j5k0yO6VLawxICF6z79gIxZBt66RKD-jWaqU3FagrIIC2F9G4c_VSZbtfnjVwCmdwU7DulD6zlL-IfhkCo3D_OEeDLTZRwzl6vRNerWtculUAldQYdkI9xlYUuNZT32a922hALmti0f2QrOnDDB6uibHpMBQjMWOVcNa5-WU2L6_TzP0-huMonsHDz15x0jICyn2b6trYTdyk7ap4-8yjiiDKhcPnAoTJHtpQpTcjABJkyMq7BcAh6gJ1bleI-1X4-4c0GHkVA7s2z0xL8l6g98rRKO0CJOJwg%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFMnKWVaJR-t3CGP6DD1Y5QHxp0eRJ1k34mnh_R3ewW14ssARawb6Q6ORZJuku5JkJ_rVCCsDPTV_L80grRbAJgL4Y0gWa9DSSysV__oHQEIligNkQdTwdgSStqo9bPNtTMf0nkJ4InEc6VFUZ_9W3KUG2qwFqOujjgqu22OflJhzlIoCbWJYxDpgDCrp7BT1Yw0sYlhKD9Fr6lUlW9M__K1D_PXqgP0JLJYIIlZkqqCKIx5lnCcUeY3r-PsD9RUIF5LcFAPbgEAq9o8-6AJBwKyxo7or2YDqSJNOFnR98a1EfuPec7fCsZdCQFV2Kh-E6iI4vpQiZjRyyAhwiWK0loDX4ZM4PrZDZ9MRmevJx072QIyd6lW0DC2xgrF6NVic3sSjuHIttU1TbV22hauPLpVyXLwqeCLiKXT_3V4if_FdR3IndHhjNJByosAeF3f3Xou_-JKBoDmeFE9QK0yJ2IKudH8mzi5qHX40ChYm9VqrXv-M1SeSB-kjAZ1Y1g9XbRRlUa9IDWN9Lk6QEtnwdf9vVjtmnFWpP_nzWZRnL9P7sjXHrZGPF5UvxmLP8LwuzQ%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFKBMMB3qZ19eRVnJpCBuPENJjG7S2YGxCj4CuRRAPhWfOFmnr6Q46GYWIcjr7GOJEtKpIvYRvaXziIfnVcYy5A4ZFfXSHkYgKApm_rblgTdu6Tmyqd28tRFvLpMPZfRO1Gr6BL7LcAs01E66j330j_899LE5A5gCgYlt6RJWHzAxc8ajAhbC3r74J4GWmxFVDTs6L_phLdjN9aqp6gzFG7JXsTBFAK0vZVIywGdKRcB7ETbcVPtibcG34XQXy9wrYCxsS2stQgmCE9OgNv84V3RYrx7_w4xLO0FnqyQ7AL_LrnpM5Nvt64o9OKp7gW3FFhCIX5UuBXr_PXjOVGD8S8i9ozesStSVyrKwFlsbn9MQgztSwtevmaBdk-xJ1cZwdCbR5gG5kYLaceAR_lOPhciotBwO0rzr7aVnAeWHGvLzvLhA554ybfZ_QutZw4ix4NSQ0NhJGh2BIIkv6FZIQLxKCv9K47GNciTF7bXyhPuIrdInTGaEMemlICekUtlbgjxWXCkqrntcHFYN2JAfES2mSL3VVOqciuMTBOwVy2rCdfuWb0bBU5uJhLaLarIu1g%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qR2UOnMkNnW5PjDii5RH2TzucmwgfNZys2POCAVrmLQld4oeNhQeibPruwgyBmNihGXPwLOFNi4Zsq115KlvYsjOuFajW72tsjqEHj8wV4prOIhIs_ykKi1j4lUFHtwk3WhApyByGz_UlI5x1MNAcgae0lDITDT90diLpwfDQ1OxoD7SR98U15mS77OPBZUMxm9jPdzBYmoEpkXuFirgQrzYUHGklf5qjiCEnBowtset0o_zEQpne4Em3KRvpqttft83zbUBhNvWzKKBRad-6uZ80O7v5HjzIhZr5cOb3SfBpaparvCf8ezjbtiPnKSehV1k1GS7wylZIAovtC1OmGj190B_MHtuqXKuxu5uN_-ecvVMrEVyTELF9TSYH81q5VIdy9pZFsp_g_Mp6ACwDd7BKV9p4KfSqlqeGScKJnKrxy9mgFD-x97Q3wUsGi27G1wbsktF5I6stmTRDyihZhMGmKz7RQPJRv3zR4DzfafLr6b9OPik8DHoGFMsIMcJGYgz1c8D5Ak2lzQmuC5OfjyvlopE1rTjbL5CVl5ED_3o0E8QdigJdFsDOZczWZpKPL8myU7e4V0IA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFGhr3qSYKhCigbPlEBbXMQsX0-CEQLhn4udWS809NtnBKWAeQs6yOsrz7s0BK2UYmH7wbDatj_CfUchpvYQY6yDrz7V1ou4y6ZgII0HaG7Lq5NB6E8mdyReqp8uB8zkoPi3bm05KYHXOgU85MvHEDZ3C-FQ3h_JzwUoY7o9bfTUtrSUQO6j5tB3Xl7lp1FRhrQKd95mwCypyeDITEajJYFtCvAH4FYIjGwKKYAB0Jcz86CcIYGhI_RQJAgqiBF8KMDH3Pbtb0dhgH38ywvMx805-KQZuT5wBPNvQGPdt9-z79jKJTwDjlDT6uiZ3OTwVqJU7CtwbWtqHWKVQ_AEhRMeVuZl5tKmHktku4qKvISiaFpXRS2AQ6pbWbGLhzm4mF_lzoI5u_wqadUPpyiZMp7zil6xBT7UgBl5hEE-A8gBQnLJRgZ8gDey_1opSXk0kKqtqMtV40E6O5sgIb3bCJywcOgvQvBMBD1bA-73WtoG76MZFR1ZvlCaFMjyBK5i7nAjRVoFjPUSoSzBVIREDJmWBQmV8HHAwMVVY0gE-9p9kbPHFGqOoC7pns9Unhuq98A%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFIfRqbgLfEWJAyVdqrH7P4KAxsCXBkHLmDWxaltFYfsJiHl4SnQfdeR4frHmba87com5SJFa5gokY2Ysn2ydybAkqyXSla6HzszLfhrDYigJuGAYzGavLdixQYEv2fNMMKR5Dkdhudu_WeaWfPtgF4eK7uxpyUhj_sZJTLTrdfeRQ_Hn2P_idIKAAr9XrijF9MC59r1ApN3gv1onZC1glKyIS5JwBj4lpP1TrJw-ywd7NZg1WXQqcZh0LdgXm7AcwEQeyLEhImjwacmK6L2mdAKAUDfevQtJjoiMI6bgoPj_LPS8YEZY_dk7g5gEAdV2MwwqNMacatNG_l0k1Egv_JOD3DN2-pvSFhP7F8Jzw_E8oUJZ3NHH6n8dq4N0Nl_VHZKMdjVXxsCAlEMIAK8hIlTDQNw8c5Dms3SMB_eIuFmAcUmAor5v1HAf8GkMSThHE1LrUb6jQp9qt1pTzB4jReed4obs6SJ-nvdyAQovpF7MFj2NHvh4r6Rk-JHYDuQdbb51Bo9yOJTvJ5uK2Ngnn5oeMd4HoINifeb8EyxJKfDNdlX6Uv0VreqIQDACoFNGdQ%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFNKzLBCilu9juhXzeZPCoa2fJdWmL330clrhZQ_KFjEg0BgoK0yzJnAceoY1DuoS_zpGtnIYp4Vai4wm4btYZ6h8pS_23h6Nv5sJBfMtnfLlFFseC5YCRPqg-aT1cUoZJ5g_u8MlygSlSTAZ6lYrD14lMkpnpYLpmC1APu8Mm0vdmX1di89cX5PR558tdGHij0ejRYpW9jIe92c4L16j77PGFDid-Bls-b1Aa9lTWyR7F7VpODPqiAwmLqBAPMswvjS7_8d8HLGunud9A-xbijY0TgQM9NLgzXKXedQMherlslB0riam5mTZXP-QTzRE1fca_KLpaaQb-Mp9xz0zlekQkKwZ3RWcoVA5cxxwZLglnT0UqyDuqCaEXPnItzI3C-Oj4mOKOTWQZcaxcU6GydbZIcXDKxIotKJs9KUPZpUuUXVvfP7sdvCAIBgONf0msHcliwuX7MnUz_h46jVxubAxJe6QtGZM41IjyJBJI_jhqa9Cfo2Eij9FZNkVN9cJ5TCkWVf9qVftZoWtXSUndUqpBwt_qunwC5Fgh0vBmAhu57KpQsYQZmm5w5smAQtLGA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFK-_0S4wmlDsYs6ihhYwIvA9mhVlRUoL_QosxESdT-dv_qQcQbjffNQ_MtbfCKjs3GLVciiFUYX0jweJpQty6VGm9ywKLajAK7kibiiXtS3jt8M1APWbup38g6ehhjhQAzIIPmtZ6tEsXWGYWpeWHwMq8PJ5Q8vvaAy2oHs_MS18ExztC8N2dLxL-CuitBfc7kOvT5BpQN5hH2HzwTnazwQZwwumVVZRFIaUF7neLjXmrf5eIdqc_Mwbe3DH3rxgbfu6xHqn0ZNNnoE9sQZuCar7h2FxTwZsHe8zPjPxIx1ZgsU5qbvSOINlPdarrKdQzTLhXGNlk-5buSaPDuXrMXvFRKse00REVrMVkE6-QZd8FRaUtV6bMYCsalEloVJTc-l6tc8uN6uUXmHaTFwq5vogApXH_EUyQLXvs3ZPsZx8nwtzo8KUn98NLqPGy_WW1GE_RJQOYPtMN0c0XnkEigK4hsKLc5daVBe6MtXZY17sq-nvIljwWqKHoQd2G5wp7mMonmck0NicfyOzPo3fKAZcGSH0fBl6Lwr8tsSHxyVZUVUqDHfF2wethO_t5_LBzw%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFMIgKRG6uIn1cbEwMJ4p3M3RsasKa5g1DeanD5iO_Q2-7m8ZW3t3aHCh53uU-lDSbKXT2ydVyNoEfKmv5pkkoTvXKfNICy8HqsHm8XjeGucbHEwlzf3y9cOw8NJdFCPeg-tEfblHJA-n4siOLaIaIAuNlX_ANj9KCzspfapLDv5ggiZ0BvEqnmJw7cPWF6MClvCBnaxG7rduLRdWdlBCraYW8zSHqUrvdg8Vi7vkBqliFi4KQbp5sBhVpYFvkJuD-rc_4E9Z2C0-XiTA4KLdw5YzKLuUo3C4_4dl2JcYsy_WIT-AtkkezqeSfDg4ovW5rB4DuZEWf1NM4uZNqK4iOPcRFTiYAjvsvmn2xu3sqE9UXW20Q2bHGSGWkC7aC-sZfPJgFl8DNsEB8HE9YQkzGRzy2JJszKPs3gZG-ITLFk-fZDYbcriam5NZTWQbHZcA8hmy3QeTFsTW-Tx4JctopXNe2VWx8CfV11_eKtKCwhOb42e0ybouqImlN-2gjUJ-n30X5yuTxWTgXCWonlS31gmFr3oUWjrS8Smobt9ACorrtoYRhGe7K8IhQSyJwZhHxw%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qR2UOnMkNnW5PFCEPDf_xITmEjggKAYDIUv95a0-puHa6UvVR4VppH4OD7xugTqbDod838zOBo_WgSnxgoKoCJlB-85Pgytb3wl_iCc8nnGzpvSY2Mv4CMplFRlKgfnRSL1DE6EqmpTKP3x_eX1BY08kmZTDrCJASApkRjYSjiI_JHlhnEVx6-0n5lpUGoG-wWntqZWTAcfvSbEVRNIKLJAvXTSYKU6_zgJ-ckXRbqn-awQV4tXBBT6YGT7Qo4di9qcT2F1UysSLsxrq9K1-pohwmL77sw3abmctsNRPqVMgRwRPBP28NcN7Gax-uXvqDt8ku720PJfQoY9kAbKuAavG-odgLAr4Hv70lLsjfPr9jZK7VKteeib6Fq1CtxVUptX_aSR-3DrIdcoUUCeNeCbMvknkhxt3ieHRNK_ILW1xApLRVEvnpyWguf0JkcDsjqKHf5TSEobX3kQMwjmHWO4FJuoEMeMr3SRBLi3SQdOodkYxmfq7S_0STNHmq-y8wH3r9sGyatZNpAU4dKhWbL-J-KJqForJYSZvdEMUff4NK2dX9U1XJviZosWsefTZpO8ZfU4m30DQQ%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFCniXjh_OOXUImqZbak5DFYNOrfQE3_CUPM7D9r7pZeRulLXkqIkIKW1w3C5WaWh4JShau03P04WlAQBUgsf7IzYtim5nKr4dLa4w3JibhVv3E_NchDdjjD0ZXEfxE5pDBIf7LYAhHgZbnq3kYLZC22thNCKTHz0qtfKxOaUfhLcF60dOJpd1MtlW2ahnQH9-NK5QUzYCREyXG5lALk2R2hmB2uc7oENAHj8QWS8279cmNZAbu965QGgfkjyYbznGxjZmgFwrlPbmaBR1Sl2wmiG_yRtIQM9H_jnbadlVrwKOL79WTZ7potg1liMC6_QdG3y8JDXuPu7FVqomBLlsEozhdehCZO1D_sz7cBZ7ulLA_-VkxUBBInMcwCJEyHaCQDjGedWOyJzlZO7DRyNmgdsjMXJpyPkdNMrf0Gwa653XnRprMeIzBmbvDhErHnRZTuMNPoJYqJDKRsIR3mWiY-1BQaslauM_rhyHFNsYzIbdgwwJnRNLSAer3Y7RSO2mHWMoo91BuvZM3PD9sitDHE-82EVCziv38-BbOJg0FdOaiQdQbL5lQhkq8rWqiIfog%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjb84bkaCQyOq-myT0C-Ktb_kF97hamPuz4ZZk3rmRrVU_m2Z51XN3szZYaCPxNG07BYjyjwYkBVGTfTGYPVecze9u-jGHCQmfvey4yZrPyKR-cA01PbV3h61GBiHFc-skGrpoDK0eliCfJPX7f9_IVT-MEKcW_xpZDBt9WJyAFp02V_v1KZL11uGnpYEXDMHIJS3uf-rfarIsLvh8nMqh4FXYxyqzeDHqaIXHzsPeO1R0UxCvqSsCm3GyHhPrli_qSEikgmHlKgFMLB_EmxizDX7uhTX6ArEqDYqTrc4ZOj50mhqK1LnnO1BoKmKjjtoSc42JXjhcd-RBW-37Af48f0XaBaBskUNaBokw1SIuBMWFa726g6wQp1WbaAY1KG5SDfKdVK3ia4Y6G7RfsW-mkZJr6b62NHS2wOwX5g9zFEHCxbLXJJWffWksaX7z-34QuG9hVG4sfpZ7yF4s5QoG5Ss1Ca1zXELVJ_SQD8-6MOyzrRr_tKmqYpNHh_zgunp55yk5v-TYeH9mCgIyswh4ckXqZ1HeCcrdKIZpnpUXVoizHU9E8F8AYvnfSHoHVPhcqjaYZKY609550emz4fh-otWBs8ShBEGB3tCqwex921vNdtw7aFmw7Ywhe-XCKuBXXsS4OonU1yROVOBoVE8w-lS2qcBkac4V-ASt8qvcBiF_tRBGVvGKebaiSvPTJ-1cqZvGesgj30KIYnfkgLhGAOgGW_w4jYMBWjtahH_qgcqicB0t5dXT4JIcvMVXGmxORGHu-CI6A0x1P4wvWlkFDuq6q5hw8tuA0RhvhvJhV0Hvb1JRM0MshvB__66730nIQ7mzdY9I4Yiw%3D%3D";
let ReadArr = [], YouthBody = remoteBody.split('&'),readscore = 0;
//  if (process.env.YOUTH_READ && process.env.YOUTH_READ.indexOf('&') > -1) {
//  YouthBody = process.env.YOUTH_READ.split('&');
//  console.log(`您选择的是用"&"隔开\n`)
//  }
//  else if (process.env.YOUTH_READ && process.env.YOUTH_READ.indexOf('\n') > -1) {
//  YouthBody = process.env.YOUTH_READ.split('\n');
//  console.log(`您选择的是用换行隔开\n`)
//  } else {
//  YouthBody = process.env.YOUTH_READ.split()
//  }
  Object.keys(YouthBody).forEach((item) => {
        if (YouthBody[item]) {
          ReadArr.push(YouthBody[item])
        }
    })
      console.log(`============ 脚本执行-国际标准时间(UTC)：${new Date().toLocaleString()}  =============\n`)
      console.log(`============ 脚本执行-北京时间(UTC+8)：${new Date(new Date().getTime() + 8 * 60 * 60 * 1000).toLocaleString()}  =============\n`)
 !(async () => {
  if (!ReadArr[0]) {
    console.log($.name, '【提示】请把抓包的请求体填入Github 的 Secrets 中，请以&隔开')
    return;
  }
  for (let i = 0; i < ReadArr.length; i++) {
    if (ReadArr[i]) {
      articlebody = ReadArr[i];
      $.index = i + 1;
      console.log(`-------------------------\n\n开始中青看点第${$.index}次阅读`)
    }
      await AutoRead();
 }
  if ($.isNode() && readscore>0) {
     await notify.sendNotify(`中青看点任务收益`,`中青看点共完成${$.index}次阅读，共计获得${readscore}个青豆，阅读请求全部结束`)
   }
   console.log(`-------------------------\n\n中青看点共完成${$.index}次阅读，共计获得${readscore}个青豆，阅读请求全部结束`)
})()
  .catch((e) => $.logErr(e))
  .finally(() => $.done())

function AutoRead() {
    return new Promise((resolve, reject) => {
       let url = {
            url: `https://ios.baertt.com/v5/article/complete.json`,
            headers: {
            'User-Agent': 'KDApp/1.7.8 (iPhone; iOS 14.3; Scale/2.00)'
            },
            body: articlebody
        };
        $.post(url, async(error, response, data) => {
           let readres = JSON.parse(data);
             //console.log(data)
           if (readres.error_code == '0' && typeof readres.items.read_score === 'number') {
              console.log(`\n本次阅读获得${readres.items.read_score}个青豆，请等待30s后执行下一次阅读\n`);
              readscore += readres.items.read_score;
              await $.wait(30000);
            }
            else if (readres.error_code == '0' && typeof readres.items.score === 'number') {
              console.log(`\n本次阅读获得${readres.items.score}个青豆，即将开始下次阅读\n`)
              readscore += readres.items.score
            }
            else if (readres.success == false){
              console.log(`第${$.index}次阅读请求有误，请删除此请求`)
            }
            else if (readres.items.max_notice == '\u770b\u592a\u4e45\u4e86\uff0c\u63621\u7bc7\u8bd5\u8bd5') {     
              console.log(readres.items.max_notice)
            }
          resolve()
        })
    })
}

function Env(t,e){class s{constructor(t){this.env=t}send(t,e="GET"){t="string"==typeof t?{url:t}:t;let s=this.get;return"POST"===e&&(s=this.post),new Promise((e,i)=>{s.call(this,t,(t,s,r)=>{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,"POST")}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile="box.dat",this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator="\n",this.startTime=(new Date).getTime(),Object.assign(this,e),this.log("",`\ud83d\udd14${this.name}, \u5f00\u59cb!`)}isNode(){return"undefined"!=typeof module&&!!module.exports}isQuanX(){return"undefined"!=typeof $task}isSurge(){return"undefined"!=typeof $httpClient&&"undefined"==typeof $loon}isLoon(){return"undefined"!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=>{this.get({url:t},(t,s,i)=>e(i))})}runScript(t,e){return new Promise(s=>{let i=this.getdata("@chavy_boxjs_userCfgs.httpapi");i=i?i.replace(/\n/g,"").trim():i;let r=this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout");r=r?1*r:20,r=e&&e.timeout?e.timeout:r;const[o,h]=i.split("@"),a={url:`http://${h}/v1/scripting/evaluate`,body:{script_text:t,mock_type:"cron",timeout:r},headers:{"X-Key":o,Accept:"*/*"}};this.post(a,(t,e,i)=>s(i))}).catch(t=>this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e);if(!s&&!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\[(\d+)\]/g,".$1").split(".");let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=>Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])>>0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\.(.*?)$/.exec(t),r=s?this.getval(s):"";if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,""):e}catch(t){e=""}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\.(.*?)$/.exec(e),o=this.getval(i),h=i?"null"===o?null:o||"{}":"{}";try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&&this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&&this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require("got"),this.cktough=this.cktough?this.cktough:require("tough-cookie"),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&&(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&&void 0===t.cookieJar&&(t.cookieJar=this.ckjar))}get(t,e=(()=>{})){t.headers&&(delete t.headers["Content-Type"],delete t.headers["Content-Length"]),this.isSurge()||this.isLoon()?(this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.get(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t))):this.isNode()&&(this.initGotEnv(t),this.got(t).on("redirect",(t,e)=>{try{if(t.headers["set-cookie"]){const s=t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)}))}post(t,e=(()=>{})){if(t.body&&t.headers&&!t.headers["Content-Type"]&&(t.headers["Content-Type"]="application/x-www-form-urlencoded"),t.headers&&delete t.headers["Content-Length"],this.isSurge()||this.isLoon())this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.post(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method="POST",this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)})}}time(t){let e={"M+":(new Date).getMonth()+1,"d+":(new Date).getDate(),"H+":(new Date).getHours(),"m+":(new Date).getMinutes(),"s+":(new Date).getSeconds(),"q+":Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,((new Date).getFullYear()+"").substr(4-RegExp.$1.length)));for(let s in e)new RegExp("("+s+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:("00"+e[s]).substr((""+e[s]).length)));return t}msg(e=t,s="",i="",r){const o=t=>{if(!t)return t;if("string"==typeof t)return this.isLoon()?t:this.isQuanX()?{"open-url":t}:this.isSurge()?{url:t}:void 0;if("object"==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t["open-url"],s=t.mediaUrl||t["media-url"];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t["open-url"]||t.url||t.openUrl,s=t["media-url"]||t.mediaUrl;return{"open-url":e,"media-url":s}}if(this.isSurge()){let e=t.url||t.openUrl||t["open-url"];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&&$notify(e,s,i,o(r)));let h=["","==============\ud83d\udce3\u7cfb\u7edf\u901a\u77e5\ud83d\udce3=============="];h.push(e),s&&h.push(s),i&&h.push(i),console.log(h.join("\n")),this.logs=this.logs.concat(h)}log(...t){t.length>0&&(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&&!this.isQuanX()&&!this.isLoon();s?this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t.stack):this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t)}wait(t){return new Promise(e=>setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log("",`\ud83d\udd14${this.name}, \u7ed3\u675f! \ud83d\udd5b ${s} \u79d2`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&&$done(t)}}(t,e)}
